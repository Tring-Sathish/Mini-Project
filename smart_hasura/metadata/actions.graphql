type Mutation {
  Register(
    arg1: RegisterInput!
  ): RegisterOutput
}

type Mutation {
  forgotPassword(
    arg1: passInput!
  ): passOutput
}

type Mutation {
  signIn(
    arg1: SignInInput!
  ): SignInOutput
}

type Mutation {
  updatePass(
    arg1: pwdInput!
  ): pwdOutput
}

input SampleInput {
  email: String!
  password: String!
}

input SignInInput {
  email: String!
  password: String!
}

input RegisterInput {
  username: String!
  password: String!
  email: String!
  confirm_password: String!
  f_name: String!
}

input passInput {
  email: String!
}

input pwdInput {
  password: String!
  id: String!
}

type SampleOutput {
  token: String!
  message: String!
}

type SignInOutput {
  token: String!
  message: String!
  id: String!
}

type RegisterOutput {
  message: String!
}

type passOutput {
  message: String!
}

type pwdOutput {
  message: String!
}

